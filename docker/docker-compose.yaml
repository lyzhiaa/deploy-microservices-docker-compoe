#services:
#
#  vault:
#    image: vault:1.13.3
#    container_name: vault
#    ports:
#      - "8200:8200"
#    environment:
#      - VAULT_DEV_ROOT_TOKEN_ID=myroot
#      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - ./vault/logs:/vault/logs
#      - ./vault/file:/vault/file
#      - ./vault/config:/vault/config
#    networks:
#      - microservices-net
#
#  postgres:
#    image: postgres:16.3-bullseye
#    environment:
#      POSTGRES_DB: db-oauth-gateway
#      POSTGRES_USER: lyzhia
#      POSTGRES_PASSWORD: 123456
#    ports:
#      - "5435:5432"  # external port mapped to internal postgres port
#    volumes:
#      - db_order_vol:/var/lib/postgresql/data
#    networks:
#      - microservices-net
#
#  service-registry:
#    image: service-registry
#    build:
#      dockerfile: Dockerfile
#      context: ../service-registry
#    ports:
#      - "8761:8761"
#    environment:
#      - EUREKA_INSTANCE_HOSTNAME=service-registry
#      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
#      - EUREKA_CLIENT_FETCH_REGISTRY=false
#      - EUREKA_SERVER_ENABLESELFPRESERVATION=false
#    networks:
#      - microservices-net
#
#      #config server
#  config-server:
#    image: config-server
#    build:
#      dockerfile: Dockerfile
#      context: ../config-server
#    ports:
#      - "1680:1680"
#    environment:
##      - SPRING_PROFILES_ACTIVE=vault
#      - SPRING_CLOUD_VAULT_URI=http://vault:8200
#      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
#    depends_on:
#      - service-registry
#      - vault
#    networks:
#      - microservices-net
#
#  product-service:
#    image: product-service
#    build:
#      dockerfile: Dockerfile
#      context: ../Product  # changed to forward slash
#    ports:
#      - "8081:8081"
#    networks:
#      - microservices-net
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      #- SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db-oauth-gateway
##      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
##    depends_on:
##      - config-server
##      - vault
#
#  order-service:
#    image: order-service
#    build:
#      dockerfile: Dockerfile
#      context: ../order-service  # changed to forward slash
#    ports:
#      - "8082:8082"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      #SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/db-order-service
##      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#    depends_on:
#      - postgres
#    networks:
#      - microservices-net
#    command: ["java", "-jar", "app.jar", "--debug"]
#
#  prometheus:
#    image: prom/prometheus:latest
#    ports:
#      - "9091:9090"
#    volumes:
#      - prometheus-data:/prometheus
#      - ./prometheus:/etc/prometheus
#    command: --config.file=/etc/prometheus/prometheus.yaml
#
#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - "3000:3000"
#    volumes:
#      - grafana-data:/var/lib/grafana
#    depends_on:
#      - prometheus
#
#networks:
#  microservices-net:
#    driver: bridge
#
#volumes:
#  prometheus-data:
#  grafana-data:
#  db_order_vol:
#  vault_data:
# Docker Compose configuration

services:

  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/logs:/vault/logs
      - ./vault/file:/vault/file
      - ./vault/config:/vault/config
    networks:
      - microservices-net

  postgres:
    image: postgres:16.3-bullseye
    environment:
      POSTGRES_DB: db-oauth-gateway
      POSTGRES_USER: lyzhia
      POSTGRES_PASSWORD: 123456
    ports:
      - "5435:5432"  # external port mapped to internal postgres port
    volumes:
      - db_order_vol:/var/lib/postgresql/data
      - db_category_vol:/var/lib/postgresql/data
    networks:
      - microservices-net

  service-registry:
    image: service-registry
    build:
      dockerfile: Dockerfile
      context: ../service-registry
    ports:
      - "8761:8761"
    environment:
      - EUREKA_INSTANCE_HOSTNAME=service-registry
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_SERVER_ENABLESELFPRESERVATION=false
    networks:
      - microservices-net

  config-server:
    image: config-server
    build:
      dockerfile: Dockerfile
      context: ../config-server
    ports:
      - "1680:1680"
    environment:
      - SPRING_CLOUD_VAULT_URI=http://vault:8200
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
    depends_on:
      - service-registry
      - vault
    networks:
      - microservices-net

  product-service:
    image: product-service
    build:
      dockerfile: Dockerfile
      context: ../Product
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:1680
    depends_on:
      - config-server
      - vault

  order-service:
    image: order-service
    build:
      dockerfile: Dockerfile
      context: ../order-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
    networks:
      - microservices-net
    command: ["java", "-jar", "app.jar", "--debug"]

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus:/etc/prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

networks:
  microservices-net:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  db_order_vol:
  vault_data:
